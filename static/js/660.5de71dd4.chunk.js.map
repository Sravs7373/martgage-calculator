{"version":3,"file":"static/js/660.5de71dd4.chunk.js","mappings":"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","sources":["components/DocumentTitle.js","components/pages/add-details/details/YearsCalculation.js","components/pages/add-details/details/TableYear.js","components/pages/add-details/details/SingleData.js","components/pages/add-details/details/BarChartsDisplay.js","components/pages/add-details/details/MortgageDetails.js"],"sourcesContent":["export const DocumentTitle = (title)=>{\r\n    return document.title = title;\r\n}","const YearsCalculation = (n,year)=>{\r\n    let y = year;\r\n   let years = [];\r\n    for(let i =0;i<n;i++){\r\n        years.push(y);\r\n        y++;\r\n    }\r\n    return years;\r\n}\r\nexport default YearsCalculation;","const TableYear = (props)=>{\r\n    return(\r\n        <tr className=\"table-list-item\">\r\n        <td>{props.year}</td>\r\n        <td>&#x20B9; {Math.floor(props.pA)}</td>\r\n        <td>&#x20B9; {Math.ceil(props.cI)}</td>\r\n        <td>&#x20B9; {Math.floor(props.emi)}</td>\r\n        <td>&#x20B9; {Math.ceil(props.p)}</td>\r\n     </tr>\r\n    )\r\n}\r\nexport default TableYear;","import { useEffect, useState } from \"react\";\r\n\r\nconst SingleData = (props)=>{\r\n    const [month,setMonth] = useState(0);\r\n    useEffect(()=>{\r\n        if((props.data.startMonth==='10Oct'||props.data.startMonth==='11Nov'||props.data.startMonth==='12Dec')){\r\n            setMonth(props.data.startMonth.slice(2))\r\n        }\r\n        else{\r\n            setMonth(props.data.startMonth.slice(1));\r\n        }\r\n    },[month])\r\n    \r\n    return(\r\n            <ul className=\"flex single-data-display\">\r\n                <li>Loan Amount : &#x20B9; {props.data.loanAmount}</li>\r\n                <li>Interest Rate : {props.data.interestRate}%</li>\r\n                <li>Time Period : {props.data.timePeriod}years</li>\r\n                <li>Start Month : {month}</li>\r\n                <li>Start Year : {props.data.startYear}</li>\r\n            </ul>\r\n    )\r\n}\r\nexport default SingleData;","import { Bar } from \"react-chartjs-2\";\r\nimport { Chart } from \"chart.js/auto\";\r\nconst BarChartsDisplay = (props)=>{\r\n    const labels = props.yearsArr;\r\n    const principal = props.amtArr;\r\n    const balance = props.balanceArr;\r\n    const interest = props.intArr;\r\n    const emi = props.emiArr;\r\n    const data = {\r\n        labels,\r\n        datasets:[\r\n            {\r\n                label:'Balance Amount',\r\n                data:balance,\r\n                backgroundColor:'#FF4A4A'\r\n            },\r\n            {\r\n                label:'Principal Amount',\r\n                data:principal,\r\n                backgroundColor:'#5BB318'\r\n            },\r\n            {\r\n                label:'Interest Amount',\r\n                data:interest,\r\n                backgroundColor:'#242F9B'\r\n            },\r\n            {\r\n                label:'EMI Amount',\r\n                data:emi,\r\n                backgroundColor:'#6FEDD6'\r\n            }\r\n        ]\r\n    }\r\n    return(\r\n        <div>\r\n            <Bar data={data} />\r\n        </div>\r\n    )\r\n}\r\nexport default BarChartsDisplay;","import { useContext, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport ContextStore from \"../../../store-context/ContextStore\";\r\nimport './MortgageDetails.css';\r\nimport YearsCalculation from \"./YearsCalculation\";\r\nimport TableYear from \"./TableYear\";\r\nimport SingleData from \"./SingleData\";\r\nimport BarChartsDisplay from \"./BarChartsDisplay\";\r\nimport { DocumentTitle } from \"../../../DocumentTitle\";\r\n\r\nconst MortgageDetails = ()=>{\r\n    DocumentTitle('Mortgage History');\r\n    const id = useParams();\r\n    let amtArr = [];\r\n    let intArr = [];\r\n    let yearsArr = [];\r\n    let balanceArr = [];\r\n    let emiArr = [];\r\n    // EMI = P x (r / n) x (1 + r / n)^n(t)] / (1 + r / n)^n(t) - 1 // formula for emi calculations\r\n    const mortInfo = useContext(ContextStore).mortgageList;\r\n    const filteredMort = mortInfo.filter((val)=>val.id==id.mortId);\r\n    const newData = filteredMort[0];\r\n    let month = +(newData.startMonth==='10Oct'||newData.startMonth==='11Nov'||newData.startMonth==='12Dec'?newData.startMonth.substring(0,2):newData.startMonth.charAt(0));\r\n    const NumYears = month===1?+newData.timePeriod:+newData.timePeriod+1;\r\n    const [arrYears,setArrYears] = useState(YearsCalculation(NumYears,+newData.startYear));\r\n    let loanAmount = +newData.loanAmount; \r\n    const n = 12; //12months\r\n    const R = (+newData.interestRate/100)/n;  //the rate of interest applicable on the loan amount on a monthly basis\r\n    const powValueNum = Math.pow((1+(R)),n*newData.timePeriod);\r\n    const emi = ((loanAmount*(R)*(powValueNum/(powValueNum-1))));\r\n    let totalPrinciple = 0;\r\n    let totalInterest = 0;\r\n    return(\r\n        <div className=\"container mortgage-data-showing\">\r\n            <h3 className=\"mortgage-details-heading\">Mortgage Details</h3>\r\n            <SingleData data={newData}/>\r\n            <table className=\"mortdetails-list-table\">\r\n                    <tbody>\r\n                        <tr className=\"mort-head\">\r\n                            <th className=\"year\">Year</th>\r\n                            <th className=\"principal\">Principal<br/> (A)</th>\r\n                            <th className=\"interest\">Interest<br/> (B)</th>\r\n                            <th className=\"payment\">Total Payment<br/> (A+B)</th>\r\n                            <th className=\"balance\">Balance</th>\r\n                        </tr>\r\n                        {\r\n                                arrYears.map((y,i)=>{\r\n                                    let totalCI = 0;\r\n                                    let totalpA = 0;\r\n                                    let totalEMI = 0;\r\n                                    if(i===0){\r\n                                        for(;month<=12;month++){\r\n                                            const cI = (loanAmount*(R));\r\n                                            const pA = (emi-cI);\r\n                                            loanAmount -= pA; \r\n                                            totalCI += cI;\r\n                                            totalpA +=pA;\r\n                                            totalEMI +=emi;\r\n                                        }\r\n                                    }\r\n                                    if(i>0 && (i<arrYears.length-1)){\r\n                                        for(let monStart = 1;monStart<=12;monStart++){\r\n                                            const cI = (loanAmount*(R));\r\n                                            const pA = (emi-cI);\r\n                                            loanAmount -= pA; \r\n                                            totalCI += cI;\r\n                                            totalpA +=pA;\r\n                                            totalEMI +=emi;\r\n                                        }\r\n                                    }\r\n                                    if(i===arrYears.length-1){\r\n                                        let newMonth = +newData.startMonth.charAt(0);\r\n                                        let lastMonth = newMonth===1?12:newMonth-1;\r\n                                        for(let monStart = 1;monStart<=lastMonth;monStart++){\r\n                                                const cI = (loanAmount*(R));\r\n                                                const pA = (emi-cI);\r\n                                                loanAmount -= pA; \r\n                                                totalCI += cI;\r\n                                                totalpA +=pA;\r\n                                                totalEMI +=emi;\r\n                                                if(monStart===lastMonth){\r\n                                                    loanAmount=0;\r\n                                                }\r\n                                                }          \r\n                                    }\r\n                                    \r\n                                    totalPrinciple += totalpA;\r\n                                    totalInterest +=  totalCI;\r\n                                    yearsArr.push(y);\r\n                                    intArr.push(Math.floor(totalCI))\r\n                                    amtArr.push(Math.floor(totalpA));\r\n                                    balanceArr.push(Math.floor(loanAmount));\r\n                                    emiArr.push(Math.floor(totalEMI))\r\n                                    return <TableYear key={i+'s'} pA={totalpA} cI={totalCI} emi={totalEMI} p={loanAmount} year={y}/>\r\n                                })\r\n                            }\r\n                    </tbody>\r\n            </table>\r\n            <div className=\"mortgage-cal-showing flex\">\r\n                    <div className=\"total-showing\">\r\n                        <h5>Loan EMI <br/><span className=\"span\">&#x20B9; {Math.ceil(emi)}</span></h5>\r\n                    </div>\r\n                    <div className=\"total-showing\">\r\n                        <h5>Total Interest Payable <br/><span className=\"span\">&#x20B9; {Math.ceil(totalInterest)}</span></h5>\r\n                    </div>\r\n                    <div className=\"total-showing\">\r\n                        <h5>Total Payment (Principal + Interest) <br/><span className=\"span\">&#x20B9; {Math.ceil(totalInterest+totalPrinciple)}</span></h5>\r\n                    </div>\r\n            </div>\r\n            <BarChartsDisplay amtArr={amtArr} yearsArr={yearsArr} balanceArr={balanceArr} intArr={intArr} emiArr={emiArr}/>\r\n        </div>\r\n    )\r\n}\r\nexport default MortgageDetails;"],"names":["DocumentTitle","title","document","n","year","y","years","i","push","props","className","Math","floor","pA","ceil","cI","emi","p","useState","month","setMonth","useEffect","data","startMonth","slice","loanAmount","interestRate","timePeriod","startYear","labels","yearsArr","principal","amtArr","datasets","label","balanceArr","backgroundColor","intArr","emiArr","id","useParams","newData","useContext","ContextStore","mortgageList","filter","val","mortId","substring","charAt","NumYears","YearsCalculation","arrYears","R","powValueNum","pow","totalPrinciple","totalInterest","map","totalCI","totalpA","totalEMI","length","monStart","newMonth","lastMonth"],"sourceRoot":""}